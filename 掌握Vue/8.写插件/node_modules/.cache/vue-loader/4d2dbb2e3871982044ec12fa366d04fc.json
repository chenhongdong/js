{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!/Users/you-mac/Downloads/Something/掌握Vue/8.写插件/components/Message.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/you-mac/Downloads/Something/掌握Vue/8.写插件/components/Message.vue","mtime":1570689147000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nexport default {\n    name: 'Message',\n    data() {\n        return {\n            messages: []\n        }\n    },\n    mounted() {\n        this.id = 0;\n    },\n    methods: {\n        add(options) {\n            let id = this.id++; // 这是每个弹层id号\n            let layer = {...options, id};\n            this.messages.push(layer);  // 每增加一个就往数组中存放一个\n\n            // 过一定时间再清除弹层\n            layer.timer = setTimeout(() => {\n                this.remove(layer);\n            }, options.duration);\n        },\n        remove(layer) {\n            clearTimeout(layer);\n            this.messages = this.messages.filter(msg => msg.id !== layer.id);\n        }\n    }\n}\n",{"version":3,"sources":["Message.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Message.vue","sourceRoot":"components","sourcesContent":["<template>\n    <div class=\"messages\" v-if=\"messages.length\">\n        <div v-for=\"msg in messages\" :key=\"msg.id\">{{msg.message}}</div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'Message',\n    data() {\n        return {\n            messages: []\n        }\n    },\n    mounted() {\n        this.id = 0;\n    },\n    methods: {\n        add(options) {\n            let id = this.id++; // 这是每个弹层id号\n            let layer = {...options, id};\n            this.messages.push(layer);  // 每增加一个就往数组中存放一个\n\n            // 过一定时间再清除弹层\n            layer.timer = setTimeout(() => {\n                this.remove(layer);\n            }, options.duration);\n        },\n        remove(layer) {\n            clearTimeout(layer);\n            this.messages = this.messages.filter(msg => msg.id !== layer.id);\n        }\n    }\n}\n</script>"]}]}